#!/bin/bash

# upgrade sytem, oh-my-zsh, prelude and dotfiles
#
# this script will be triggered by
# my adjustion of .oh-my-zsh/tools/check_for_upgrade.sh

git_dirty() {
  echo $(git status -s --untracked-files=no | tail -n1)
}

fail_upgrade() {
  printf '\033[0;31m%s\033[0m\n' 'There was an error updating. Try again later?'
  exit 1
}

update_with_git() {
  git_was_dirty=$(git_dirty)

  if [[ -n ${git_was_dirty} ]]; then
    git add . && git stash save
  fi

  if ! GIT_MERGE_AUTOEDIT=no git pull --stat origin master; then
    fail_upgrade
  fi

  if [[ -n ${git_was_dirty} ]]; then
    git stash pop
  fi
}

printf '\033[0;34m%s\033[0m\n' 'Upgrading system'
brew upgrade

# printf '\033[0;34m%s\033[0m\n' 'Upgrading gems'
# gem update

# upgrade dotfiles
printf '\033[0;34m%s\033[0m\n' 'Upgrading schasse/dotfiles'
cd ~/.dotfiles
update_with_git
printf '\033[0;34m%s\033[0m\n' 'schasse/dotfiles has been updated and/or is at the current version.'

# upgrade oh-my-zsh (copied from ~/.oh-my-zsh/tools/upgrade.sh)
tput=$(which tput)
if [ -n "$tput" ]; then
    ncolors=$(tput colors)
fi
if [ -t 1 ] && [ -n "$ncolors" ] && [ "$ncolors" -ge 8 ]; then
  RED="$(tput setaf 1)"
  GREEN="$(tput setaf 2)"
  YELLOW="$(tput setaf 3)"
  BLUE="$(tput setaf 4)"
  BOLD="$(tput bold)"
  NORMAL="$(tput sgr0)"
else
  RED=""
  GREEN=""
  YELLOW=""
  BLUE=""
  BOLD=""
  NORMAL=""
fi

printf "${BLUE}%s${NORMAL}\n" "Upgrading Oh My Zsh"
cd "$ZSH"
update_with_git
printf '%s' "$GREEN"
printf '%s\n' '         __                                     __   '
printf '%s\n' '  ____  / /_     ____ ___  __  __   ____  _____/ /_  '
printf '%s\n' ' / __ \/ __ \   / __ `__ \/ / / /  /_  / / ___/ __ \ '
printf '%s\n' '/ /_/ / / / /  / / / / / / /_/ /    / /_(__  ) / / / '
printf '%s\n' '\____/_/ /_/  /_/ /_/ /_/\__, /    /___/____/_/ /_/  '
printf '%s\n' '                        /____/                       '
printf "${BLUE}%s\n" "Hooray! Oh My Zsh has been updated and/or is at the current version."
printf "${BLUE}${BOLD}%s${NORMAL}\n" "To keep up on the latest news and updates, follow us on twitter: https://twitter.com/ohmyzsh"
printf "${BLUE}${BOLD}%s${NORMAL}\n" "Get your Oh My Zsh swag at:  http://shop.planetargon.com/"

# upgrade prelude
printf '\033[0;34m%s\033[0m\n' 'Upgrading Prelude'
cd ~/.emacs.d
update_with_git
emacs -nw --eval '(progn (package-list-packages) (epl-upgrade) (prelude-recompile-init) (kill-emacs))'
printf '\033[0;34m%s\033[0m\n' 'Prelude has been updated and/or is at the current version.'
cd ~

# upgrade tmux plugins
printf '\033[0;34m%s\033[0m\n' 'Upgrading tmux plugins'
~/.tmux/plugins/tpm/bin/update_plugins all

# upgrade fzf
printf '\033[0;34m%s\033[0m\n' 'Upgrading tmux plugins'
cd ~/.fzf
update_with_git
./install --all --no-bash --no-fish
printf '\033[0;34m%s\033[0m\n' 'Prelude has been updated and/or is at the current version.'
cd ~
